
STEROWNIK_GSM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000005  00800060  00800060  0000036e  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a5 36       	cpi	r26, 0x65	; 101
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 21 01 	call	0x242	; 0x242 <main>
  74:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <dht_read>:
  7c:	f8 94       	cli
  7e:	a7 9a       	sbi	0x14, 7	; 20
  80:	8e e8       	ldi	r24, 0x8E	; 142
  82:	92 e1       	ldi	r25, 0x12	; 18
  84:	01 97       	sbiw	r24, 0x01	; 1
  86:	f1 f7       	brne	.-4      	; 0x84 <dht_read+0x8>
  88:	a7 98       	cbi	0x14, 7	; 20
  8a:	87 e1       	ldi	r24, 0x17	; 23
  8c:	8a 95       	dec	r24
  8e:	f1 f7       	brne	.-4      	; 0x8c <dht_read+0x10>
  90:	9f 9b       	sbis	0x13, 7	; 19
  92:	03 c0       	rjmp	.+6      	; 0x9a <dht_read+0x1e>
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	06 c0       	rjmp	.+12     	; 0xa6 <dht_read+0x2a>
  9a:	88 e2       	ldi	r24, 0x28	; 40
  9c:	8a 95       	dec	r24
  9e:	f1 f7       	brne	.-4      	; 0x9c <dht_read+0x20>
  a0:	78 94       	sei
  a2:	20 e6       	ldi	r18, 0x60	; 96
  a4:	30 e0       	ldi	r19, 0x00	; 0
  a6:	c9 01       	movw	r24, r18
  a8:	08 95       	ret

000000aa <lcd_sendHalf>:
  aa:	80 ff       	sbrs	r24, 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <lcd_sendHalf+0x8>
  ae:	db 9a       	sbi	0x1b, 3	; 27
  b0:	01 c0       	rjmp	.+2      	; 0xb4 <lcd_sendHalf+0xa>
  b2:	db 98       	cbi	0x1b, 3	; 27
  b4:	81 ff       	sbrs	r24, 1
  b6:	02 c0       	rjmp	.+4      	; 0xbc <lcd_sendHalf+0x12>
  b8:	dc 9a       	sbi	0x1b, 4	; 27
  ba:	01 c0       	rjmp	.+2      	; 0xbe <lcd_sendHalf+0x14>
  bc:	dc 98       	cbi	0x1b, 4	; 27
  be:	82 ff       	sbrs	r24, 2
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <lcd_sendHalf+0x1c>
  c2:	dd 9a       	sbi	0x1b, 5	; 27
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <lcd_sendHalf+0x1e>
  c6:	dd 98       	cbi	0x1b, 5	; 27
  c8:	83 ff       	sbrs	r24, 3
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <lcd_sendHalf+0x26>
  cc:	de 9a       	sbi	0x1b, 6	; 27
  ce:	08 95       	ret
  d0:	de 98       	cbi	0x1b, 6	; 27
  d2:	08 95       	ret

000000d4 <_lcd_write_byte>:
  d4:	1f 93       	push	r17
  d6:	18 2f       	mov	r17, r24
  d8:	d6 9a       	sbi	0x1a, 6	; 26
  da:	d5 9a       	sbi	0x1a, 5	; 26
  dc:	d4 9a       	sbi	0x1a, 4	; 26
  de:	d3 9a       	sbi	0x1a, 3	; 26
  e0:	da 9a       	sbi	0x1b, 2	; 27
  e2:	82 95       	swap	r24
  e4:	8f 70       	andi	r24, 0x0F	; 15
  e6:	0e 94 55 00 	call	0xaa	; 0xaa <lcd_sendHalf>
  ea:	da 98       	cbi	0x1b, 2	; 27
  ec:	da 9a       	sbi	0x1b, 2	; 27
  ee:	81 2f       	mov	r24, r17
  f0:	0e 94 55 00 	call	0xaa	; 0xaa <lcd_sendHalf>
  f4:	da 98       	cbi	0x1b, 2	; 27
  f6:	88 e2       	ldi	r24, 0x28	; 40
  f8:	8a 95       	dec	r24
  fa:	f1 f7       	brne	.-4      	; 0xf8 <_lcd_write_byte+0x24>
  fc:	1f 91       	pop	r17
  fe:	08 95       	ret

00000100 <lcd_write_cmd>:
 100:	d9 98       	cbi	0x1b, 1	; 27
 102:	0e 94 6a 00 	call	0xd4	; 0xd4 <_lcd_write_byte>
 106:	08 95       	ret

00000108 <lcd_write_data>:
 108:	d9 9a       	sbi	0x1b, 1	; 27
 10a:	0e 94 6a 00 	call	0xd4	; 0xd4 <_lcd_write_byte>
 10e:	08 95       	ret

00000110 <lcd_char>:
 110:	98 2f       	mov	r25, r24
 112:	80 58       	subi	r24, 0x80	; 128
 114:	88 30       	cpi	r24, 0x08	; 8
 116:	08 f4       	brcc	.+2      	; 0x11a <lcd_char+0xa>
 118:	97 70       	andi	r25, 0x07	; 7
 11a:	89 2f       	mov	r24, r25
 11c:	0e 94 84 00 	call	0x108	; 0x108 <lcd_write_data>
 120:	08 95       	ret

00000122 <lcd_str>:
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	ec 01       	movw	r28, r24
 128:	08 c0       	rjmp	.+16     	; 0x13a <lcd_str+0x18>
 12a:	89 2f       	mov	r24, r25
 12c:	80 58       	subi	r24, 0x80	; 128
 12e:	88 30       	cpi	r24, 0x08	; 8
 130:	08 f4       	brcc	.+2      	; 0x134 <lcd_str+0x12>
 132:	97 70       	andi	r25, 0x07	; 7
 134:	89 2f       	mov	r24, r25
 136:	0e 94 84 00 	call	0x108	; 0x108 <lcd_write_data>
 13a:	99 91       	ld	r25, Y+
 13c:	99 23       	and	r25, r25
 13e:	a9 f7       	brne	.-22     	; 0x12a <lcd_str+0x8>
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <lcd_defchar>:
 146:	1f 93       	push	r17
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	eb 01       	movw	r28, r22
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	87 70       	andi	r24, 0x07	; 7
 152:	90 70       	andi	r25, 0x00	; 0
 154:	08 96       	adiw	r24, 0x08	; 8
 156:	88 0f       	add	r24, r24
 158:	88 0f       	add	r24, r24
 15a:	88 0f       	add	r24, r24
 15c:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 160:	10 e0       	ldi	r17, 0x00	; 0
 162:	89 91       	ld	r24, Y+
 164:	0e 94 84 00 	call	0x108	; 0x108 <lcd_write_data>
 168:	1f 5f       	subi	r17, 0xFF	; 255
 16a:	18 30       	cpi	r17, 0x08	; 8
 16c:	d1 f7       	brne	.-12     	; 0x162 <lcd_defchar+0x1c>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	08 95       	ret

00000176 <lcd_locate>:
 176:	82 30       	cpi	r24, 0x02	; 2
 178:	31 f0       	breq	.+12     	; 0x186 <lcd_locate+0x10>
 17a:	83 30       	cpi	r24, 0x03	; 3
 17c:	31 f0       	breq	.+12     	; 0x18a <lcd_locate+0x14>
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	29 f4       	brne	.+10     	; 0x18c <lcd_locate+0x16>
 182:	80 e4       	ldi	r24, 0x40	; 64
 184:	03 c0       	rjmp	.+6      	; 0x18c <lcd_locate+0x16>
 186:	80 e1       	ldi	r24, 0x10	; 16
 188:	01 c0       	rjmp	.+2      	; 0x18c <lcd_locate+0x16>
 18a:	80 e5       	ldi	r24, 0x50	; 80
 18c:	60 58       	subi	r22, 0x80	; 128
 18e:	86 0f       	add	r24, r22
 190:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 194:	08 95       	ret

00000196 <lcd_cls>:
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 19c:	89 ec       	ldi	r24, 0xC9	; 201
 19e:	94 e0       	ldi	r25, 0x04	; 4
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_cls+0xa>
 1a4:	08 95       	ret

000001a6 <lcd_init>:
 1a6:	1f 93       	push	r17
 1a8:	d6 9a       	sbi	0x1a, 6	; 26
 1aa:	d5 9a       	sbi	0x1a, 5	; 26
 1ac:	d4 9a       	sbi	0x1a, 4	; 26
 1ae:	d3 9a       	sbi	0x1a, 3	; 26
 1b0:	d1 9a       	sbi	0x1a, 1	; 26
 1b2:	d2 9a       	sbi	0x1a, 2	; 26
 1b4:	d9 98       	cbi	0x1b, 1	; 27
 1b6:	da 98       	cbi	0x1b, 2	; 27
 1b8:	86 ea       	ldi	r24, 0xA6	; 166
 1ba:	9e e0       	ldi	r25, 0x0E	; 14
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <lcd_init+0x16>
 1c0:	d9 98       	cbi	0x1b, 1	; 27
 1c2:	d8 98       	cbi	0x1b, 0	; 27
 1c4:	80 e3       	ldi	r24, 0x30	; 48
 1c6:	0e 94 55 00 	call	0xaa	; 0xaa <lcd_sendHalf>
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	94 e0       	ldi	r25, 0x04	; 4
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <lcd_init+0x28>
 1d2:	80 e3       	ldi	r24, 0x30	; 48
 1d4:	0e 94 55 00 	call	0xaa	; 0xaa <lcd_sendHalf>
 1d8:	11 e2       	ldi	r17, 0x21	; 33
 1da:	81 2f       	mov	r24, r17
 1dc:	8a 95       	dec	r24
 1de:	f1 f7       	brne	.-4      	; 0x1dc <lcd_init+0x36>
 1e0:	80 e2       	ldi	r24, 0x20	; 32
 1e2:	0e 94 55 00 	call	0xaa	; 0xaa <lcd_sendHalf>
 1e6:	1a 95       	dec	r17
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <lcd_init+0x40>
 1ea:	88 e2       	ldi	r24, 0x28	; 40
 1ec:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 1f0:	88 e0       	ldi	r24, 0x08	; 8
 1f2:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 1f6:	8c e0       	ldi	r24, 0x0C	; 12
 1f8:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 1fc:	86 e0       	ldi	r24, 0x06	; 6
 1fe:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_cmd>
 202:	0e 94 cb 00 	call	0x196	; 0x196 <lcd_cls>
 206:	1f 91       	pop	r17
 208:	08 95       	ret

0000020a <lcd_int>:
 20a:	df 93       	push	r29
 20c:	cf 93       	push	r28
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	61 97       	sbiw	r28, 0x11	; 17
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	be 01       	movw	r22, r28
 220:	6f 5f       	subi	r22, 0xFF	; 255
 222:	7f 4f       	sbci	r23, 0xFF	; 255
 224:	4a e0       	ldi	r20, 0x0A	; 10
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	0e 94 36 01 	call	0x26c	; 0x26c <itoa>
 22c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_str>
 230:	61 96       	adiw	r28, 0x11	; 17
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	f8 94       	cli
 236:	de bf       	out	0x3e, r29	; 62
 238:	0f be       	out	0x3f, r0	; 63
 23a:	cd bf       	out	0x3d, r28	; 61
 23c:	cf 91       	pop	r28
 23e:	df 91       	pop	r29
 240:	08 95       	ret

00000242 <main>:
 242:	d7 9a       	sbi	0x1a, 7	; 26
 244:	df 9a       	sbi	0x1b, 7	; 27
 246:	bc 9a       	sbi	0x17, 4	; 23
 248:	84 b3       	in	r24, 0x14	; 20
 24a:	83 64       	ori	r24, 0x43	; 67
 24c:	84 bb       	out	0x14, r24	; 20
 24e:	85 b3       	in	r24, 0x15	; 21
 250:	83 60       	ori	r24, 0x03	; 3
 252:	85 bb       	out	0x15, r24	; 21
 254:	82 b3       	in	r24, 0x12	; 18
 256:	88 6f       	ori	r24, 0xF8	; 248
 258:	82 bb       	out	0x12, r24	; 18
 25a:	87 b3       	in	r24, 0x17	; 23
 25c:	80 6a       	ori	r24, 0xA0	; 160
 25e:	87 bb       	out	0x17, r24	; 23
 260:	8d b1       	in	r24, 0x0d	; 13
 262:	80 65       	ori	r24, 0x50	; 80
 264:	8d b9       	out	0x0d, r24	; 13
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	08 95       	ret

0000026c <itoa>:
 26c:	fb 01       	movw	r30, r22
 26e:	9f 01       	movw	r18, r30
 270:	e8 94       	clt
 272:	42 30       	cpi	r20, 0x02	; 2
 274:	c4 f0       	brlt	.+48     	; 0x2a6 <itoa+0x3a>
 276:	45 32       	cpi	r20, 0x25	; 37
 278:	b4 f4       	brge	.+44     	; 0x2a6 <itoa+0x3a>
 27a:	4a 30       	cpi	r20, 0x0A	; 10
 27c:	29 f4       	brne	.+10     	; 0x288 <itoa+0x1c>
 27e:	97 fb       	bst	r25, 7
 280:	1e f4       	brtc	.+6      	; 0x288 <itoa+0x1c>
 282:	90 95       	com	r25
 284:	81 95       	neg	r24
 286:	9f 4f       	sbci	r25, 0xFF	; 255
 288:	64 2f       	mov	r22, r20
 28a:	77 27       	eor	r23, r23
 28c:	0e 94 67 01 	call	0x2ce	; 0x2ce <__udivmodhi4>
 290:	80 5d       	subi	r24, 0xD0	; 208
 292:	8a 33       	cpi	r24, 0x3A	; 58
 294:	0c f0       	brlt	.+2      	; 0x298 <itoa+0x2c>
 296:	89 5d       	subi	r24, 0xD9	; 217
 298:	81 93       	st	Z+, r24
 29a:	cb 01       	movw	r24, r22
 29c:	00 97       	sbiw	r24, 0x00	; 0
 29e:	a1 f7       	brne	.-24     	; 0x288 <itoa+0x1c>
 2a0:	16 f4       	brtc	.+4      	; 0x2a6 <itoa+0x3a>
 2a2:	5d e2       	ldi	r21, 0x2D	; 45
 2a4:	51 93       	st	Z+, r21
 2a6:	10 82       	st	Z, r1
 2a8:	c9 01       	movw	r24, r18
 2aa:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <strrev>

000002ae <strrev>:
 2ae:	dc 01       	movw	r26, r24
 2b0:	fc 01       	movw	r30, r24
 2b2:	67 2f       	mov	r22, r23
 2b4:	71 91       	ld	r23, Z+
 2b6:	77 23       	and	r23, r23
 2b8:	e1 f7       	brne	.-8      	; 0x2b2 <strrev+0x4>
 2ba:	32 97       	sbiw	r30, 0x02	; 2
 2bc:	04 c0       	rjmp	.+8      	; 0x2c6 <strrev+0x18>
 2be:	7c 91       	ld	r23, X
 2c0:	6d 93       	st	X+, r22
 2c2:	70 83       	st	Z, r23
 2c4:	62 91       	ld	r22, -Z
 2c6:	ae 17       	cp	r26, r30
 2c8:	bf 07       	cpc	r27, r31
 2ca:	c8 f3       	brcs	.-14     	; 0x2be <strrev+0x10>
 2cc:	08 95       	ret

000002ce <__udivmodhi4>:
 2ce:	aa 1b       	sub	r26, r26
 2d0:	bb 1b       	sub	r27, r27
 2d2:	51 e1       	ldi	r21, 0x11	; 17
 2d4:	07 c0       	rjmp	.+14     	; 0x2e4 <__udivmodhi4_ep>

000002d6 <__udivmodhi4_loop>:
 2d6:	aa 1f       	adc	r26, r26
 2d8:	bb 1f       	adc	r27, r27
 2da:	a6 17       	cp	r26, r22
 2dc:	b7 07       	cpc	r27, r23
 2de:	10 f0       	brcs	.+4      	; 0x2e4 <__udivmodhi4_ep>
 2e0:	a6 1b       	sub	r26, r22
 2e2:	b7 0b       	sbc	r27, r23

000002e4 <__udivmodhi4_ep>:
 2e4:	88 1f       	adc	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	5a 95       	dec	r21
 2ea:	a9 f7       	brne	.-22     	; 0x2d6 <__udivmodhi4_loop>
 2ec:	80 95       	com	r24
 2ee:	90 95       	com	r25
 2f0:	bc 01       	movw	r22, r24
 2f2:	cd 01       	movw	r24, r26
 2f4:	08 95       	ret

000002f6 <_exit>:
 2f6:	f8 94       	cli

000002f8 <__stop_program>:
 2f8:	ff cf       	rjmp	.-2      	; 0x2f8 <__stop_program>
